# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker:
    runs-on: ubuntu-latest
    environment: elsworkEnvironment
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.2.0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Make Buildx
        run: make buildx
      # - 
      #   name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:

      #     images: |
      #       ${{ github.repository }}
      #       ghcr.io/${{ github.repository }}
      #     labels: |
      #       org.opencontainers.image.url=https://deft.work/squoosh
      #       org.opencontainers.image.source=https://github.com/${{ github.repository }}
      #       org.opencontainers.image.version=0.6.5
      #     tags: |
      #       0.6.5
      #       latest
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
